## Set the API endpoint used to create the Deployment resource.
apiVersion: apps/v1
## Define the type of the resource.
kind: Deployment
## Set the parameters that make the object identifiable, such as its name, namespace, and labels.
metadata:
  annotations:
  labels:
    app: go-helloworld
  name: go-helloworld
  namespace: default
## Define the desired configuration for the Deployment resource.
spec:
  ## Set the number of replicas.
  ## This will create a ReplicaSet that will manage 3 pods of the Go hello-world application.
  replicas: 1
  ## Identify the pods managed by this Deployment using the following selectors.
  ## In this case, all pods with the label `go-helloworld`.
  selector:
    matchLabels:
      app: go-helloworld
  ## Set the RollingOut strategy for the Deployment.
  ## For example, roll out only 25% of the new pods at a time.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  ## Set the configuration for the pods.
  template:
    ## Define the identifiable metadata for the pods.
    ## For example, all pods should have the label `go-helloworld`
    metadata:
      labels:
        app: go-helloworld
        
    spec:
      containers:
      
      - image: techtrends:latest
        imagePullPolicy: IfNotPresent
        name: techtrends
      
        ports:
        - containerPort: 3111
          protocol: TCP
          
        livenessProbe:
           httpGet:
             path: /healthz
             port: 3111
             
        readinessProbe:
           httpGet:
             path: /healthz
             port: 3111
             
        resources:
        
          requests:
            memory: "64Mi"
            cpu: "250m"
            
          limits:
            memory: "128Mi"
            cpu: "500m"